
apply plugin: 'yakworks.grails-plugin'
apply plugin: "org.grails.grails-gsp"

dependencies {
    profile "org.grails.profiles:web-plugin"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    compile 'org.apache.poi:poi:'+versionPoi
    compile('org.apache.poi:poi-ooxml:'+versionPoi) {
      //  exclude module:"poi-ooxml-schemas"
    }
    //compile 'org.apache.poi:poi-ooxml-schemas:'+poiVersion
    //compile 'org.apache.poi:ooxml-schemas:1.3'

    compile("net.sf.jasperreports:jasperreports:$versionJasper"){
        exclude module:'commons-logging'
        exclude module:'olap4j'
        exclude module:'jcommon'
        exclude module: 'jfreechart' //<-charts
        exclude module: 'itext' //exclude itext:2.1.7js5 which is not available in jcenter or maven central
    }

    compile group: 'com.lowagie', name: 'itext', version: versionItext

    //the DejaVu sans font which is the recomended pacaked font for Jasper reports and pdf exporting
    compile('net.sf.jasperreports:jasperreports-fonts:'+versionJasperFonts)

    compile('net.sourceforge.dynamicreports:dynamicreports-core:'+versionDynamicReports){
        exclude module:'jasperreports'
        exclude module:'barcode4j'
        exclude module: 'batik-bridge' //don't need the barcode stuff
    }

    compile "org.grails.plugins:view-tools:$versionViewTools"

    // testCompile "org.grails:grails-plugin-testing"
    // runtime "com.h2database:h2"
    // testCompile "org.grails:grails-plugin-testing"
    // testCompile "org.grails:grails-web-testing-support"
}

ext.codenarcRuleset= '''
  getRule('CyclomaticComplexity').enabled = false
  getRule('NoWildcardImports').enabled = false
  getRule('CatchException').enabled = false
  getRule('AbcMetric').enabled = false
  getRule('MethodSize').enabled = false
'''

codenarcIntegrationTest {
    exclude '**/*'
    ignoreFailures = true
}
